// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render without crashing 1`] = `
<FindRoomForm
  i18n={Object {}}
  t={[Function]}
  tReady={false}
/>
`;

exports[`should toggle fixed form 1`] = `
<div
  className="fixed-form-wrapper"
  id="fixed-form-wrapper"
>
  <div
    className="toggle-fixed-form"
    onClick={[Function]}
  >
    book-room.label
  </div>
  <div>
    <div
      className="find-room-form"
    >
      <label
        htmlFor="checkIn"
      >
        Check In
      </label>
      <input
        id="checkIn"
        name="checkIn"
        onChange={[Function]}
        type="date"
      />
      <ErrorMessage
        type="error"
      />
      <label
        htmlFor="checkOut"
      >
        Check Out
      </label>
      <input
        id="checkIn"
        name="checkOut"
        onChange={[Function]}
        type="date"
      />
      <ErrorMessage
        type="error"
      />
      <WithStyles(ForwardRef(FormControl))
        className="makeStyles-formControl-1"
      >
        <ForwardRef(FormControl)
          className="makeStyles-formControl-1"
          classes={
            Object {
              "fullWidth": "MuiFormControl-fullWidth",
              "marginDense": "MuiFormControl-marginDense",
              "marginNormal": "MuiFormControl-marginNormal",
              "root": "MuiFormControl-root",
            }
          }
        >
          <div
            className="MuiFormControl-root makeStyles-formControl-1"
          >
            <WithStyles(ForwardRef(InputLabel))
              className="makeStyles-label-4"
              id="demo-simple-select-label"
            >
              <ForwardRef(InputLabel)
                className="makeStyles-label-4"
                classes={
                  Object {
                    "animated": "MuiInputLabel-animated",
                    "asterisk": "MuiInputLabel-asterisk",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "filled": "MuiInputLabel-filled",
                    "focused": "Mui-focused",
                    "formControl": "MuiInputLabel-formControl",
                    "marginDense": "MuiInputLabel-marginDense",
                    "outlined": "MuiInputLabel-outlined",
                    "required": "Mui-required",
                    "root": "MuiInputLabel-root",
                    "shrink": "MuiInputLabel-shrink",
                  }
                }
                id="demo-simple-select-label"
              >
                <WithStyles(ForwardRef(FormLabel))
                  className="MuiInputLabel-root makeStyles-label-4 MuiInputLabel-formControl MuiInputLabel-animated"
                  classes={
                    Object {
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "required": "Mui-required",
                    }
                  }
                  data-shrink={false}
                  id="demo-simple-select-label"
                >
                  <ForwardRef(FormLabel)
                    className="MuiInputLabel-root makeStyles-label-4 MuiInputLabel-formControl MuiInputLabel-animated"
                    classes={
                      Object {
                        "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                        "colorSecondary": "MuiFormLabel-colorSecondary",
                        "disabled": "Mui-disabled Mui-disabled",
                        "error": "Mui-error Mui-error",
                        "filled": "MuiFormLabel-filled",
                        "focused": "Mui-focused Mui-focused",
                        "required": "Mui-required Mui-required",
                        "root": "MuiFormLabel-root",
                      }
                    }
                    data-shrink={false}
                    id="demo-simple-select-label"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root makeStyles-label-4 MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                      id="demo-simple-select-label"
                    >
                      Category
                    </label>
                  </ForwardRef(FormLabel)>
                </WithStyles(ForwardRef(FormLabel))>
              </ForwardRef(InputLabel)>
            </WithStyles(ForwardRef(InputLabel))>
            <WithStyles(ForwardRef(Select))
              className="makeStyles-select-3"
              id="demo-simple-select"
              labelId="demo-simple-select-label"
              name="category"
              onChange={[Function]}
              value=""
            >
              <ForwardRef(Select)
                className="makeStyles-select-3"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "filled": "MuiSelect-filled",
                    "icon": "MuiSelect-icon",
                    "iconFilled": "MuiSelect-iconFilled",
                    "iconOpen": "MuiSelect-iconOpen",
                    "iconOutlined": "MuiSelect-iconOutlined",
                    "outlined": "MuiSelect-outlined",
                    "root": "MuiSelect-root",
                    "select": "MuiSelect-select",
                    "selectMenu": "MuiSelect-selectMenu",
                  }
                }
                id="demo-simple-select"
                labelId="demo-simple-select-label"
                name="category"
                onChange={[Function]}
                value=""
              >
                <WithStyles(ForwardRef(Input))
                  className="makeStyles-select-3"
                  inputComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "IconComponent": [Function],
                        "MenuProps": [Function],
                        "SelectDisplayProps": [Function],
                        "autoFocus": [Function],
                        "autoWidth": [Function],
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "defaultValue": [Function],
                        "disabled": [Function],
                        "displayEmpty": [Function],
                        "inputRef": [Function],
                        "labelId": [Function],
                        "multiple": [Function],
                        "name": [Function],
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onClose": [Function],
                        "onFocus": [Function],
                        "onOpen": [Function],
                        "open": [Function],
                        "readOnly": [Function],
                        "renderValue": [Function],
                        "required": [Function],
                        "tabIndex": [Function],
                        "type": [Function],
                        "value": [Function],
                        "variant": [Function],
                      },
                      "render": [Function],
                    }
                  }
                  inputProps={
                    Object {
                      "IconComponent": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "displayName": "ArrowDropDownIcon",
                        "muiName": "SvgIcon",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "MenuProps": undefined,
                      "SelectDisplayProps": Object {
                        "id": "demo-simple-select",
                      },
                      "autoWidth": false,
                      "children": Array [
                        <ForwardRef(WithStyles)
                          value=""
                        >
                          
                        </ForwardRef(WithStyles)>,
                      ],
                      "classes": Object {
                        "disabled": "Mui-disabled",
                        "filled": "MuiSelect-filled",
                        "icon": "MuiSelect-icon",
                        "iconFilled": "MuiSelect-iconFilled",
                        "iconOpen": "MuiSelect-iconOpen",
                        "iconOutlined": "MuiSelect-iconOutlined",
                        "outlined": "MuiSelect-outlined",
                        "root": "MuiSelect-root",
                        "select": "MuiSelect-select",
                        "selectMenu": "MuiSelect-selectMenu",
                      },
                      "displayEmpty": false,
                      "labelId": "demo-simple-select-label",
                      "multiple": false,
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": undefined,
                      "type": undefined,
                      "variant": "standard",
                    }
                  }
                  name="category"
                  onChange={[Function]}
                  value=""
                >
                  <ForwardRef(Input)
                    className="makeStyles-select-3"
                    classes={
                      Object {
                        "colorSecondary": "MuiInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "marginDense": "MuiInput-marginDense",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root",
                        "underline": "MuiInput-underline",
                      }
                    }
                    inputComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "IconComponent": [Function],
                          "MenuProps": [Function],
                          "SelectDisplayProps": [Function],
                          "autoFocus": [Function],
                          "autoWidth": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "displayEmpty": [Function],
                          "inputRef": [Function],
                          "labelId": [Function],
                          "multiple": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onClose": [Function],
                          "onFocus": [Function],
                          "onOpen": [Function],
                          "open": [Function],
                          "readOnly": [Function],
                          "renderValue": [Function],
                          "required": [Function],
                          "tabIndex": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    inputProps={
                      Object {
                        "IconComponent": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "displayName": "ArrowDropDownIcon",
                          "muiName": "SvgIcon",
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "MenuProps": undefined,
                        "SelectDisplayProps": Object {
                          "id": "demo-simple-select",
                        },
                        "autoWidth": false,
                        "children": Array [
                          <ForwardRef(WithStyles)
                            value=""
                          >
                            
                          </ForwardRef(WithStyles)>,
                        ],
                        "classes": Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "iconFilled": "MuiSelect-iconFilled",
                          "iconOpen": "MuiSelect-iconOpen",
                          "iconOutlined": "MuiSelect-iconOutlined",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select",
                          "selectMenu": "MuiSelect-selectMenu",
                        },
                        "displayEmpty": false,
                        "labelId": "demo-simple-select-label",
                        "multiple": false,
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                        "variant": "standard",
                      }
                    }
                    name="category"
                    onChange={[Function]}
                    value=""
                  >
                    <WithStyles(ForwardRef(InputBase))
                      className="makeStyles-select-3"
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline",
                          "root": "MuiInput-root MuiInput-underline",
                          "underline": null,
                        }
                      }
                      fullWidth={false}
                      inputComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "IconComponent": [Function],
                            "MenuProps": [Function],
                            "SelectDisplayProps": [Function],
                            "autoFocus": [Function],
                            "autoWidth": [Function],
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "defaultValue": [Function],
                            "disabled": [Function],
                            "displayEmpty": [Function],
                            "inputRef": [Function],
                            "labelId": [Function],
                            "multiple": [Function],
                            "name": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onClose": [Function],
                            "onFocus": [Function],
                            "onOpen": [Function],
                            "open": [Function],
                            "readOnly": [Function],
                            "renderValue": [Function],
                            "required": [Function],
                            "tabIndex": [Function],
                            "type": [Function],
                            "value": [Function],
                            "variant": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      inputProps={
                        Object {
                          "IconComponent": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "ArrowDropDownIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "MenuProps": undefined,
                          "SelectDisplayProps": Object {
                            "id": "demo-simple-select",
                          },
                          "autoWidth": false,
                          "children": Array [
                            <ForwardRef(WithStyles)
                              value=""
                            >
                              
                            </ForwardRef(WithStyles)>,
                          ],
                          "classes": Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          },
                          "displayEmpty": false,
                          "labelId": "demo-simple-select-label",
                          "multiple": false,
                          "onClose": undefined,
                          "onOpen": undefined,
                          "open": undefined,
                          "renderValue": undefined,
                          "type": undefined,
                          "variant": "standard",
                        }
                      }
                      multiline={false}
                      name="category"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <ForwardRef(InputBase)
                        className="makeStyles-select-3"
                        classes={
                          Object {
                            "adornedEnd": "MuiInputBase-adornedEnd",
                            "adornedStart": "MuiInputBase-adornedStart",
                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "focused": "Mui-focused Mui-focused",
                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                            "input": "MuiInputBase-input MuiInput-input",
                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                          }
                        }
                        fullWidth={false}
                        inputComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "IconComponent": [Function],
                              "MenuProps": [Function],
                              "SelectDisplayProps": [Function],
                              "autoFocus": [Function],
                              "autoWidth": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "defaultValue": [Function],
                              "disabled": [Function],
                              "displayEmpty": [Function],
                              "inputRef": [Function],
                              "labelId": [Function],
                              "multiple": [Function],
                              "name": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onClose": [Function],
                              "onFocus": [Function],
                              "onOpen": [Function],
                              "open": [Function],
                              "readOnly": [Function],
                              "renderValue": [Function],
                              "required": [Function],
                              "tabIndex": [Function],
                              "type": [Function],
                              "value": [Function],
                              "variant": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        inputProps={
                          Object {
                            "IconComponent": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "ArrowDropDownIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "MenuProps": undefined,
                            "SelectDisplayProps": Object {
                              "id": "demo-simple-select",
                            },
                            "autoWidth": false,
                            "children": Array [
                              <ForwardRef(WithStyles)
                                value=""
                              >
                                
                              </ForwardRef(WithStyles)>,
                            ],
                            "classes": Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            },
                            "displayEmpty": false,
                            "labelId": "demo-simple-select-label",
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": "standard",
                          }
                        }
                        multiline={false}
                        name="category"
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <div
                          className="MuiInputBase-root MuiInput-root MuiInput-underline makeStyles-select-3 MuiInputBase-formControl MuiInput-formControl"
                          onClick={[Function]}
                        >
                          <ForwardRef(SelectInput)
                            IconComponent={
                              Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "displayName": "ArrowDropDownIcon",
                                "muiName": "SvgIcon",
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              }
                            }
                            SelectDisplayProps={
                              Object {
                                "id": "demo-simple-select",
                              }
                            }
                            aria-invalid={false}
                            autoWidth={false}
                            className="MuiInputBase-input MuiInput-input"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            disabled={false}
                            displayEmpty={false}
                            inputRef={[Function]}
                            labelId="demo-simple-select-label"
                            multiple={false}
                            name="category"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            value=""
                            variant="standard"
                          >
                            <div
                              aria-haspopup="listbox"
                              aria-labelledby="demo-simple-select-label demo-simple-select"
                              className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                              id="demo-simple-select"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "&#8203;",
                                  }
                                }
                              />
                            </div>
                            <input
                              name="category"
                              onAnimationStart={[Function]}
                              type="hidden"
                              value=""
                            />
                            <ForwardRef
                              className="MuiSelect-icon"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                className="MuiSelect-icon"
                              >
                                <ForwardRef(SvgIcon)
                                  className="MuiSelect-icon"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root MuiSelect-icon"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                            <WithStyles(ForwardRef(Menu))
                              MenuListProps={
                                Object {
                                  "aria-labelledby": "demo-simple-select-label",
                                  "disableListWrap": true,
                                  "role": "listbox",
                                }
                              }
                              PaperProps={
                                Object {
                                  "style": Object {
                                    "minWidth": undefined,
                                  },
                                }
                              }
                              anchorEl={
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="demo-simple-select-label demo-simple-select"
                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                  id="demo-simple-select"
                                  role="button"
                                  tabindex="0"
                                >
                                  <span>
                                    ​
                                  </span>
                                </div>
                              }
                              id="menu-category"
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                MenuListProps={
                                  Object {
                                    "aria-labelledby": "demo-simple-select-label",
                                    "disableListWrap": true,
                                    "role": "listbox",
                                  }
                                }
                                PaperProps={
                                  Object {
                                    "style": Object {
                                      "minWidth": undefined,
                                    },
                                  }
                                }
                                anchorEl={
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="demo-simple-select-label demo-simple-select"
                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                    id="demo-simple-select"
                                    role="button"
                                    tabindex="0"
                                  >
                                    <span>
                                      ​
                                    </span>
                                  </div>
                                }
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="menu-category"
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                      "style": Object {
                                        "minWidth": undefined,
                                      },
                                    }
                                  }
                                  anchorEl={
                                    <div
                                      aria-haspopup="listbox"
                                      aria-labelledby="demo-simple-select-label demo-simple-select"
                                      class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                      id="demo-simple-select"
                                      role="button"
                                      tabindex="0"
                                    >
                                      <span>
                                        ​
                                      </span>
                                    </div>
                                  }
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="menu-category"
                                  onClose={[Function]}
                                  onEntering={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="demo-simple-select-label demo-simple-select"
                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                                        id="demo-simple-select"
                                        role="button"
                                        tabindex="0"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </div>
                                    }
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="menu-category"
                                    onClose={[Function]}
                                    onEntering={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      container={
                                        <body>
                                          <div
                                            class="Toaster"
                                            id="react-toast"
                                          >
                                            <span
                                              class="Toaster__manager-top"
                                              style="max-width: 560px; position: fixed; z-index: 5500; pointer-events: none; margin: 0px auto; text-align: center; top: 0px; right: 0px; left: 0px;"
                                            />
                                            <span
                                              class="Toaster__manager-top-left"
                                              style="max-width: 560px; position: fixed; z-index: 5500; pointer-events: none; top: 0px; left: 0px;"
                                            />
                                            <span
                                              class="Toaster__manager-top-right"
                                              style="max-width: 560px; position: fixed; z-index: 5500; pointer-events: none; top: 0px; right: 0px;"
                                            />
                                            <span
                                              class="Toaster__manager-bottom-left"
                                              style="max-width: 560px; position: fixed; z-index: 5500; pointer-events: none; bottom: 0px; left: 0px;"
                                            />
                                            <span
                                              class="Toaster__manager-bottom"
                                              style="max-width: 560px; position: fixed; z-index: 5500; pointer-events: none; margin: 0px auto; text-align: center; bottom: 0px; right: 0px; left: 0px;"
                                            />
                                            <span
                                              class="Toaster__manager-bottom-right"
                                              style="max-width: 560px; position: fixed; z-index: 5500; pointer-events: none; bottom: 0px; right: 0px;"
                                            />
                                          </div>
                                        </body>
                                      }
                                      id="menu-category"
                                      onClose={[Function]}
                                      open={false}
                                    />
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </ForwardRef(SelectInput)>
                        </div>
                      </ForwardRef(InputBase)>
                    </WithStyles(ForwardRef(InputBase))>
                  </ForwardRef(Input)>
                </WithStyles(ForwardRef(Input))>
              </ForwardRef(Select)>
            </WithStyles(ForwardRef(Select))>
          </div>
        </ForwardRef(FormControl)>
      </WithStyles(ForwardRef(FormControl))>
      <button
        id="check-rooms"
        onClick={[Function]}
      >
        Check rooms
      </button>
    </div>
  </div>
</div>
`;

exports[`should toggle fixed form 2`] = `"received is not a function"`;
