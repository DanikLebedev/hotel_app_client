// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`admin page create form tests should renders without crashing 1`] = `
<Container
  className="hide-modal"
  fluid={true}
>
  <div
    className="d-flex justify-content-around align-items-center"
    key="1"
  >
    <div
      className="admin-form "
    >
      <h3>
        Category form
      </h3>
      <label
        htmlFor="title"
      >
        Enter the Title
      </label>
      <input
        className="form-control"
        id="title"
        name="title"
        onChange={[Function]}
        placeholder="title"
        type="text"
        value=""
      />
      <button
        className="btn btn-primary mt-3"
        onClick={[Function]}
      >
        Add Category
      </button>
      <button
        className="close-modal-button"
        onClick={[Function]}
      >
        <FontAwesomeIcon
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                512,
                512,
                Array [],
                "f410",
                "M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z",
              ],
              "iconName": "window-close",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        />
      </button>
    </div>
  </div>
</Container>
`;

exports[`admin page create form tests should renders without crashing 2`] = `
<Container
  className="hide-modal"
  fluid={true}
>
  <div
    className="d-flex justify-content-around align-items-center"
    key="1"
  >
    <div
      className="admin-form "
    >
      <h3>
        Employee form
      </h3>
      <label
        htmlFor="employee-email"
      >
        Enter the Title
      </label>
      <input
        className="form-control"
        id="employee-email"
        name="email"
        onChange={[Function]}
        placeholder="xxx@xxx.xxx"
        type="text"
        value=""
      />
      <ErrorMessage
        type="error"
      />
      <label
        htmlFor="email"
      >
        Enter the Password
      </label>
      <input
        className="form-control"
        disabled={false}
        id="password"
        name="password"
        onChange={[Function]}
        placeholder="password"
        type="text"
        value=""
      />
      <ErrorMessage
        type="error"
      />
      <label
        htmlFor="status"
      >
        Choose status
      </label>
      <select
        className="form-control"
        id="status"
        name="status"
        onChange={[Function]}
      />
      <ErrorMessage
        type="error"
      />
      <button
        className="btn btn-primary mt-3"
        onClick={[Function]}
      >
        Create
         Employee
      </button>
      <button
        className="close-button"
        onClick={[Function]}
      >
        <FontAwesomeIcon
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                512,
                512,
                Array [],
                "f410",
                "M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z",
              ],
              "iconName": "window-close",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        />
      </button>
    </div>
  </div>
</Container>
`;

exports[`admin page create form tests should renders without crashing 3`] = `
<Container
  className="hide-modal"
  fluid={true}
>
  <div
    className="d-flex justify-content-around align-items-center"
    key="1"
  >
    <div
      className="admin-form "
    >
      <h3>
        Feedback form
      </h3>
      <label
        htmlFor="approved"
      >
        Choose status
      </label>
      <WithStyles(ForwardRef(Checkbox))
        checked={false}
        color="primary"
        name="approved"
        onChange={[Function]}
        value="checkedA"
      />
      <button
        className="btn btn-primary mt-3"
        onClick={[Function]}
      >
        Update Feedback
      </button>
      <button
        className="close-modal-button"
        onClick={[Function]}
      >
        <FontAwesomeIcon
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                512,
                512,
                Array [],
                "f410",
                "M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z",
              ],
              "iconName": "window-close",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        />
      </button>
    </div>
  </div>
</Container>
`;

exports[`admin page create form tests should renders without crashing 4`] = `
<Container
  className="hide-modal"
  fluid={true}
>
  <div
    className="d-flex justify-content-around align-items-center"
    key="1"
  >
    <div
      className="admin-form"
    >
      <form
        onSubmit={[Function]}
      >
        <h3>
          Create
           room
        </h3>
        <ForwardRef
          noGutters={false}
        >
          <Col
            lg={6}
            md={6}
            sm={6}
          >
             
            <label
              htmlFor="categories"
            >
              Choose Category
            </label>
            <select
              className="form-control"
              id="categories"
              name="category"
              onChange={[Function]}
              value=""
            >
              <option
                key="0"
                value=""
              />
            </select>
          </Col>
          <Col
            lg={6}
            md={6}
            sm={6}
          >
             
            <label
              htmlFor="title"
            >
              Enter the Title
            </label>
            <input
              className="form-control"
              id="title"
              name="title"
              onChange={[Function]}
              placeholder="title"
              type="text"
              value=""
            />
          </Col>
        </ForwardRef>
        <ForwardRef
          noGutters={false}
        >
          <Col
            lg={6}
            md={6}
            sm={6}
          >
            <label
              htmlFor="price"
            >
              Enter the Price
            </label>
            <input
              className="form-control"
              id="price"
              name="price"
              onChange={[Function]}
              placeholder="price"
              type="number"
              value={0}
            />
          </Col>
          <Col
            lg={6}
            md={6}
            sm={6}
          >
             
            <label
              htmlFor="guests"
            >
              Enter number of guests
            </label>
            <input
              className="form-control"
              id="guests"
              name="guests"
              onChange={[Function]}
              placeholder="guests"
              type="number"
              value={0}
            />
          </Col>
        </ForwardRef>
        <ForwardRef
          noGutters={false}
        >
          <Col
            lg={6}
            md={6}
            sm={6}
          >
            <label
              htmlFor="description"
            >
              Input Description
            </label>
            <input
              className="form-control"
              id="description"
              name="description"
              onChange={[Function]}
              placeholder="description"
              type="text"
              value=""
            />
          </Col>
          <Col
            lg={6}
            md={6}
            sm={6}
          >
            <label
              htmlFor="contained-button-file"
            >
              Add photo
              <WithStyles(ForwardRef(IconButton))
                aria-label="upload picture"
                color="primary"
                component="span"
              >
                <PhotoCameraIcon />
              </WithStyles(ForwardRef(IconButton))>
            </label>
            <input
              accept="image/*"
              className="makeStyles-input-1"
              defaultValue=""
              id="contained-button-file"
              multiple={true}
              name="image"
              onChange={[Function]}
              placeholder="image"
              type="file"
            />
          </Col>
        </ForwardRef>
        <ForwardRef
          noGutters={false}
        >
          <Col
            lg={6}
            md={6}
            sm={6}
          >
            <label
              htmlFor="rooms"
            >
              Enter number of rooms
            </label>
            <input
              className="form-control"
              id="rooms"
              name="rooms"
              onChange={[Function]}
              placeholder="rooms"
              type="number"
              value={0}
            />
          </Col>
          <Col
            lg={6}
            md={6}
            sm={6}
          >
            <label
              htmlFor="area"
            >
              Enter the area
            </label>
            <input
              className="form-control"
              id="area"
              name="area"
              onChange={[Function]}
              placeholder="area"
              type="number"
              value={0}
            />
          </Col>
        </ForwardRef>
        <button
          className="btn btn-primary mt-3"
        >
          Create
           Room
        </button>
      </form>
      <button
        className="close-modal-button"
        onClick={[Function]}
      >
        <FontAwesomeIcon
          border={false}
          className=""
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                512,
                512,
                Array [],
                "f410",
                "M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z",
              ],
              "iconName": "window-close",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        />
      </button>
    </div>
  </div>
</Container>
`;

exports[`admin page data grid tests should renders without crashing 1`] = `
<div
  className="grid-table-wrapper"
>
  <table
    className="m-3 grid-table"
  >
    <thead>
      <tr>
        <th
          className="search-by-input-wrapper"
        >
          <p>
            Title
          </p>
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="category-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            Actions
          </p>
          <WithStyles(ForwardRef(Tooltip))
            title="Add"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <AddIcon />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        key="0"
      >
        <td />
        <td>
          <WithStyles(ForwardRef(Tooltip))
            title="Delete"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <DeleteIcon
                color="error"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
          <WithStyles(ForwardRef(Tooltip))
            title="Edit"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <EditIcon
                color="primary"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </td>
      </tr>
    </tbody>
  </table>
  <AdminCategoryForm
    closeModal={[Function]}
    editProps={
      Object {
        "title": "",
      }
    }
    isEdit={false}
    show={false}
    update={[Function]}
  />
</div>
`;

exports[`admin page data grid tests should renders without crashing 2`] = `
<div
  className="grid-table-wrapper"
>
  <table
    className="m-3 grid-table"
  >
    <thead>
      <tr>
        <th>
          <p>
            Email
          </p>
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="email-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            Status
          </p>
           
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="status-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            Actions
          </p>
          <WithStyles(ForwardRef(Tooltip))
            title="Add"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <AddIcon />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        key="0"
      >
        <td />
        <td />
        <td>
          <WithStyles(ForwardRef(Tooltip))
            title="Delete"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <DeleteIcon
                color="error"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
          <WithStyles(ForwardRef(Tooltip))
            title="Edit"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <EditIcon
                color="primary"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </td>
      </tr>
    </tbody>
  </table>
  <AdminEmployeeForm
    closeModal={[Function]}
    editProps={
      Object {
        "email": "",
        "password": "",
        "status": "",
      }
    }
    isEdit={false}
    show={false}
    update={[Function]}
  />
</div>
`;

exports[`admin page data grid tests should renders without crashing 3`] = `
<div
  className="grid-table-wrapper"
>
  <table
    className="m-3 grid-table"
  >
    <thead>
      <tr>
        <th>
          <p>
            User Email
          </p>
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="user-email-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            User full name
          </p>
           
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="user-name-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            Message
          </p>
           
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="message-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            Approved
          </p>
          <WithStyles(ForwardRef(Tooltip))
            title="Sort"
          >
            <button
              className="sort-button"
              onClick={[Function]}
            >
              <i
                className="fas fa-sort"
              />
            </button>
          </WithStyles(ForwardRef(Tooltip))>
        </th>
        <th>
          <p>
            Actions
          </p>
          <WithStyles(ForwardRef(Tooltip))
            title="Add"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <AddIcon
                color="action"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        key="0"
      >
        <td />
        <td>
           
        </td>
        <td />
        <td>
          <FontAwesomeIcon
            border={false}
            className=""
            color="red"
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  352,
                  512,
                  Array [],
                  "f00d",
                  "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z",
                ],
                "iconName": "times",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          />
        </td>
        <td>
          <WithStyles(ForwardRef(Tooltip))
            title="Delete"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              id=""
              onClick={[Function]}
            >
              <DeleteIcon
                color="error"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
          <WithStyles(ForwardRef(Tooltip))
            title="Edit"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              id=""
              onClick={[Function]}
            >
              <EditIcon
                color="primary"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </td>
      </tr>
    </tbody>
  </table>
  <AdminFeedbackForm
    closeModal={[Function]}
    editProps={
      Object {
        "approved": false,
        "message": "",
        "userEmail": "",
        "userLastName": "",
        "userName": "",
      }
    }
    isEdit={false}
    show={false}
    update={[Function]}
  />
</div>
`;

exports[`admin page data grid tests should renders without crashing 4`] = `
<div
  className="grid-table-wrapper"
>
  <table
    className="m-3 grid-table"
  >
    <thead>
      <tr>
        <th>
          <p>
            Category
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="category-input"
              onChange={[Function]}
            />
          </div>
        </th>
        <th>
          <p>
            Title
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="title-input"
              onChange={[Function]}
            />
          </div>
        </th>
        <th
          style={
            Object {
              "width": "80px",
            }
          }
        >
          <p>
            Price
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="price-input"
              onChange={[Function]}
            />
            <WithStyles(ForwardRef(Tooltip))
              title="Sort"
            >
              <button
                className="sort-button"
                onClick={[Function]}
              >
                <i
                  className="fas fa-sort"
                />
              </button>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
        <th
          style={
            Object {
              "width": "80px",
            }
          }
        >
          <p>
            Guests
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="guests-input"
              onChange={[Function]}
            />
            <WithStyles(ForwardRef(Tooltip))
              title="Sort"
            >
              <button
                className="sort-button"
                onClick={[Function]}
              >
                <i
                  className="fas fa-sort"
                />
              </button>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
        <th>
          <p>
            Description
          </p>
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="descr-input"
            onChange={[Function]}
          />
        </th>
        <th
          style={
            Object {
              "width": "80px",
            }
          }
        >
          <p>
            Rooms
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="rooms-input"
              onChange={[Function]}
            />
            <WithStyles(ForwardRef(Tooltip))
              title="Sort"
            >
              <button
                className="sort-button"
                onClick={[Function]}
              >
                <i
                  className="fas fa-sort"
                />
              </button>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
        <th
          style={
            Object {
              "width": "80px",
            }
          }
        >
          <p>
            Area
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="area-input"
              onChange={[Function]}
            />
            <WithStyles(ForwardRef(Tooltip))
              title="Sort"
            >
              <button
                className="sort-button"
                onClick={[Function]}
              >
                <i
                  className="fas fa-sort"
                />
              </button>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
        <th>
          <p>
            Image
          </p>
        </th>
        <th>
          <p>
            Actions
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(Tooltip))
              title="Add"
            >
              <WithStyles(ForwardRef(IconButton))
                className="icon-buttons"
                onClick={[Function]}
              >
                <AddIcon />
              </WithStyles(ForwardRef(IconButton))>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        key="0"
      >
        <td />
        <td />
        <td>
          0
        </td>
        <td>
          0
        </td>
        <td />
        <td>
          0
        </td>
        <td>
          0
        </td>
        <td
          style={
            Object {
              "minWidth": "200px",
            }
          }
        >
          <div
            className="room-img"
            style={
              Object {
                "background": "url(\\"http://localhost:5000/static/\\") center center / cover",
                "height": "100px",
                "width": "100%",
              }
            }
          />
        </td>
        <td>
          <WithStyles(ForwardRef(Tooltip))
            title="Delete"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              id=""
              onClick={[Function]}
            >
              <DeleteIcon
                color="error"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
          <WithStyles(ForwardRef(Tooltip))
            title="Edit"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              id=""
              onClick={[Function]}
            >
              <EditIcon
                color="primary"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </td>
      </tr>
    </tbody>
  </table>
  <Pagination
    currentPage={1}
    paginate={[Function]}
    postPerPage={8}
    totalPosts={1}
  />
  <RoomForm
    closeModal={[Function]}
    editProps={
      Object {
        "area": 0,
        "category": "",
        "description": "",
        "guests": 0,
        "image": "",
        "isBooked": false,
        "price": 0,
        "rooms": 0,
        "title": "",
      }
    }
    isEdit={false}
    show={false}
    update={[Function]}
  />
</div>
`;

exports[`admin page data grid tests should renders without crashing 5`] = `
<div
  className="grid-table-wrapper"
>
  <table
    className="m-3 grid-table"
  >
    <thead>
      <tr>
        <th>
          <p>
            Category
          </p>
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="category-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            Check In
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="checkIn-input"
              onChange={[Function]}
            />
            <WithStyles(ForwardRef(Tooltip))
              title="Sort"
            >
              <button
                className="sort-button"
                onClick={[Function]}
              >
                <i
                  className="fas fa-sort"
                />
              </button>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
        <th>
          <p>
            Check Out
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="checkOut-input"
              onChange={[Function]}
            />
            <WithStyles(ForwardRef(Tooltip))
              title="Sort"
            >
              <button
                className="sort-button"
                onClick={[Function]}
              >
                <i
                  className="fas fa-sort"
                />
              </button>
            </WithStyles(ForwardRef(Tooltip))>
          </div>
        </th>
        <th>
          <p>
            Status
          </p>
          <WithStyles(ForwardRef(TextField))
            id="standard-basic"
            name="status-input"
            onChange={[Function]}
          />
        </th>
        <th>
          <p>
            User Email
          </p>
          <div
            className="d-flex"
          >
            <WithStyles(ForwardRef(TextField))
              id="standard-basic"
              name="user-email-input"
              onChange={[Function]}
            />
          </div>
        </th>
        <th>
          <p>
            Actions
          </p>
          <WithStyles(ForwardRef(Tooltip))
            title="Add"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <AddIcon />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        key="0"
      >
        <td />
        <td>
          Invalid Date
        </td>
        <td>
          Invalid Date
        </td>
        <td />
        <td />
        <td>
          <WithStyles(ForwardRef(Tooltip))
            title="Delete"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <DeleteIcon
                color="error"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
          <WithStyles(ForwardRef(Tooltip))
            title="Edit"
          >
            <WithStyles(ForwardRef(IconButton))
              className="icon-buttons"
              onClick={[Function]}
            >
              <EditIcon
                color="primary"
              />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(Tooltip))>
        </td>
      </tr>
    </tbody>
  </table>
  <AdminOrderForm
    closeModal={[Function]}
    editProps={
      Object {
        "category": "",
        "checkIn": "",
        "checkOut": "",
        "orderId": "",
        "status": "",
        "userEmail": "",
      }
    }
    isEdit={false}
    show={false}
    update={[Function]}
  />
  <Pagination
    currentPage={1}
    paginate={[Function]}
    postPerPage={8}
    totalPosts={1}
  />
</div>
`;

exports[`admin page test tests should renders admin page info without crashing 1`] = `
<Container
  className="admin-page"
  fluid={true}
>
  <Tabs
    defaultActiveKey="category"
    id="uncontrolled-tab-example"
    mountOnEnter={false}
    unmountOnExit={false}
    variant="tabs"
  >
    <Tab
      eventKey="category"
      title="Categories"
    >
      <CategoryDataGrid />
    </Tab>
    <Tab
      eventKey="rooms"
      title="Rooms"
    >
      <RoomDataGrid />
    </Tab>
    <Tab
      eventKey="orders"
      title="Orders"
    >
      <OrderDataGrid />
    </Tab>
    <Tab
      eventKey="employees"
      title="Employees"
    >
      <EmployeeDataGrid />
    </Tab>
    <Tab
      eventKey="feedbacks"
      title="Feedbacks"
    >
      <FeedbackDataGrid />
    </Tab>
  </Tabs>
</Container>
`;

exports[`admin page test tests should renders admin page without crashing 1`] = `
<BrowserRouter>
  <h1
    className="text-center m-3"
  >
    Admin Page
  </h1>
  <AdminNavigation />
  <Switch>
    <Route
      exact={true}
      path="/admin/info"
    >
      <AdminPageInfo />
    </Route>
    <Redirect
      to="/admin/info"
    />
  </Switch>
</BrowserRouter>
`;
